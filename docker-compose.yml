version: '3.8'

services:
  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend
    # AJOUTEZ CETTE SECTION HEALTHCHECK
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s # Donne à RabbitMQ un peu plus de temps pour démarrer

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8443:8443"
    environment:
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://host.docker.internal:3306/auth_db?useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=jilali
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka
      - SSL_KEYSTORE_PASSWORD=jilali
    volumes: # AJOUT DU VOLUME POUR LE KEYSTORE SSL
      - ./auth-service/src/main/resources/keystore.p12:/app/keystore.p12
    depends_on:
      rabbitmq:
        condition: service_healthy # Démarrera seulement si rabbitmq est sain
      eureka:
        condition: service_started # eureka n'a pas besoin d'un healthcheck aussi strict
    networks:
      - backend

  profile-service:
    build: ./profile-service
    container_name: profile-service
    ports:
      - "8081:8081"
    environment:
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://host.docker.internal:3306/profile_db?useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=jilali
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka
      - auth-service.url=https://auth-service:8443
    depends_on:
      rabbitmq:
        condition: service_healthy # Démarrera seulement si rabbitmq est sain
      auth-service:
        condition: service_started
      eureka:
        condition: service_started
    networks:
      - backend

networks:
  backend:
    driver: bridge
